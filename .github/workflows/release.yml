name: release

on:
  push:
    branches:
      - main

jobs:
  release-start:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Create PR
        uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: go
          package-name: oshabi
          bump-minor-pre-major: true
          bump-patch-for-minor-pre-major: true

      - name: Mark as prerelease
        uses: softprops/action-gh-release@v1
        if: ${{ steps.release.outputs.release_created }}
        with:
          prerelease: true
          tag_name: ${{ steps.release.outputs.tag_name }}

  linux:
    runs-on: ubuntu-20.04
    if: ${{ needs.release-start.outputs.release_created }}
    needs:
      - release-start
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Install Dependencies
        run: |
          sudo add-apt-repository -y ppa:alex-p/tesseract-ocr-devel
          sudo apt -y install tesseract-ocr libtesseract-dev libgtk-3-dev libwebkit2gtk-4.0-dev build-essential pkg-config upx libx11-dev xorg-dev libxtst-dev libpng++-dev xcb libxcb-xkb-dev x11-xkb-utils libx11-xcb-dev libxkbcommon-x11-dev libxkbcommon-dev xsel xclip

      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.1
        with:
          version: 7
          run_install: |
            - cwd: frontend

      - name: Clone GoCV
        run: git clone https://github.com/hybridgroup/gocv.git

      - name: Install OpenCV
        run: cd gocv && make install

      - name: Install Wails
        run: |
          go install github.com/wailsapp/wails/v2/cmd/wails@latest
          wails doctor

      - name: Build
        run: wails build -v 2

      - name: Compress into tar
        working-directory: build/bin
        run: |
          mkdir oshabi-linux-amd64
          mv oshabi ./oshabi-linux-amd64-${{ needs.release-pr.outputs.tag_name }}
          tar -czvf oshabi-linux-amd64.tar.gz ./oshabi-linux-amd64-${{ needs.release-pr.outputs.tag_name }}

      - name: Upload artifacts
        uses: softprops/action-gh-release@v1
        with:
          files: build/bin/oshabi-linux-amd64.tar.gz
          tag_name: ${{ needs.release-pr.outputs.tag_name }}

  windows:
    runs-on: windows-latest
    if: ${{ needs.release-start.outputs.release_created }}
    needs:
      - release-start
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: msys2/setup-msys2@v2
        with:
          msystem: mingw64
          update: true
          install: >-
            git
            base-devel
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-tesseract-ocr
            mingw-w64-x86_64-tesseract-data-eng
            mingw-w64-x86_64-leptonica
            mingw-w64-x86_64-go
            mingw-w64-x86_64-nsis

      - name: Check out code
        uses: actions/checkout@v2

      - name: Clone GoCV
        run: git clone https://github.com/hybridgroup/gocv.git

      - name: Make fake path
        run: mkdir -p C:/src/gocv.io/x/gocv

      - name: Cache OpenCV
        id: cache-opencv
        uses: actions/cache@v3
        with:
          path: C:/opencv
          key: ${{ runner.os }}-opencv

      - name: Install OpenCV
        run: cd gocv && ./win_build_opencv.cmd
        env:
          GOPATH: "C:"

      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.1
        with:
          version: 7
          run_install: |
            - cwd: frontend

      - name: Build frontend
        working-directory: frontend
        shell: cmd
        run: pnpm run build

      - name: Install Wails
        run: |
          export PATH=/usr/bin
          export PATH=$PATH:/bin
          export PATH=$PATH:/d/a/_temp/setup-msys2
          export PATH=$PATH:/c/opencv/build/bin
          export PATH=$PATH:/d/a/_temp/msys64/mingw64/bin
          export PATH=$PATH:/d/a/_temp/msys64/mingw64/include
          export PATH=$PATH:/c/Users/runneradmin/go/bin
          go env
          go install github.com/wailsapp/wails/v2/cmd/wails@latest
          wails doctor

      - name: Build
        run: |
          export PATH=/usr/bin
          export PATH=$PATH:/bin
          export PATH=$PATH:/d/a/_temp/setup-msys2
          export PATH=$PATH:/c/opencv/build/bin
          export PATH=$PATH:/d/a/_temp/msys64/mingw64/bin
          export PATH=$PATH:/d/a/_temp/msys64/mingw64/include
          export PATH=$PATH:/c/Users/runneradmin/go/bin
          wails build -v 2 -s -nsis

      - name: Upload artifacts
        uses: softprops/action-gh-release@v1
        with:
          files: build/bin/oshabi-amd64-installer.exe
          tag_name: ${{ needs.release-pr.outputs.tag_name }}

  release:
    runs-on: ubuntu-latest
    needs:
      - linux
      - windows
    steps:
      - name: Publish release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: false